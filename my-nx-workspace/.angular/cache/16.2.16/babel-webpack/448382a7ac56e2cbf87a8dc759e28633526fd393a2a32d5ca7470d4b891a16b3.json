{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nexport let ToastComponent = class ToastComponent {\n  constructor(messageService) {\n    this.messageService = messageService;\n  }\n  showConfirm() {\n    this.messageService.add({\n      key: 'confirm',\n      sticky: true,\n      severity: 'info',\n      summary: 'Are you sure you want to reply?'\n    });\n  }\n  onConfirm() {\n    this.messageService.clear('confirm');\n    alert('You clicked Reply');\n  }\n  onReject() {\n    this.messageService.clear('confirm');\n  }\n};\nToastComponent = __decorate([Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.html',\n  providers: [MessageService]\n}), __metadata(\"design:paramtypes\", [MessageService])], ToastComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}