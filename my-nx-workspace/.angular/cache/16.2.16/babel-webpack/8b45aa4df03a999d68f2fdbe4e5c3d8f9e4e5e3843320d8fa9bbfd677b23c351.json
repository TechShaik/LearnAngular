{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n    }\n    getData() {\n      return this.http.get(`${environment.apiBaseUrl}/your-endpoint`);\n    }\n    static {\n      this.ɵfac = function ApiService_Factory(t) {\n        return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ApiService,\n        factory: ApiService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ApiService;\n})();\nexport let MessageService = /*#__PURE__*/(() => {\n  class MessageService {\n    constructor(http) {\n      this.http = http;\n      this.url = \"http://localhost:8081/student/all\";\n      this.pagedUrl = \"http://localhost:8081/student/pagedData\";\n      this.studentNameUrl = \"http://localhost:8081/student/byName\";\n      this.studentIdUrl = \"http://localhost:8081/student\";\n      this.studentDeleteById = \"http://localhost:8081/student/delete\";\n    }\n    getMessage() {\n      return [\"shaiksha\", \"suhail\", \"shahid\", \"manohar\"];\n    }\n    getPagedData(page, size, sortBy, ascending) {\n      let params = new HttpParams().set('page', page).set('size', size).set('sortBy', sortBy).set('ascending', ascending.toString());\n      return this.http.get(this.pagedUrl, {\n        params\n      });\n    }\n    getStudents() {\n      return this.http.get(this.url);\n    }\n    getStudentById(id) {\n      return this.http.get(`${this.studentIdUrl}/${id}`); // ✅ Use /{id}\n    }\n    getStudentByName(name) {\n      return this.http.get(`${this.studentNameUrl}?name=${name}`);\n    }\n    deleteStudentById(id) {\n      return this.http.delete(`http://localhost:8081/student/delete/8`);\n    }\n    static {\n      this.ɵfac = function MessageService_Factory(t) {\n        return new (t || MessageService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: MessageService,\n        factory: MessageService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MessageService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}